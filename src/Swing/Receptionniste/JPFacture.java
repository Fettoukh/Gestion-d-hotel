/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Swing.Receptionniste;

import Metiers.GestionClients;
import Metiers.GestionDemande;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Image;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Calendar;
import Metiers.GestionReservation;
import Metiers.GestionService;
import TableModele.MonModele;
import TableModele.MonMondelePanier;
import java.awt.Desktop;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author amine
 */
public class JPFacture extends javax.swing.JPanel {

    GestionClients Gc = new GestionClients();
    GestionReservation Gr = new GestionReservation();
    GestionDemande Gd = new GestionDemande();
    GestionService Gs = new GestionService();
    IHMReceptionniste Jp;
    String cin ;
    int ligneR , ligneS ;
    boolean SelectionTout ;
    Vector<String> idReservation = new Vector<String>() ;
    Vector<String> idService = new Vector<String>() ;
    String titreR = "N°Réservation";
    String TitreS = "N°Demande";
    float prixR =0;
    float prixS =0;
    float prixTotale = 0;
    Object[] options1 = {"Dossiers Des Factures",
                     "PDF Facture",
                     "Retour"};
    /**
     * Creates new form JPFacture
     */
    public JPFacture() {
        initComponents();
    }
    
    public JPFacture(IHMReceptionniste Jp) {
        initComponents();
        this.Jp = Jp ;  
        ligneR = 0;
        ligneS = 0;
        SelectionTout = false ; 

    }
    
    
    
//    public void AfficherTable(String cin)
//    {
//        ResultSet Res = Gr.Reservation_Client(cin);
//        MonModele modele = new MonModele(Res);
//        TReservation.setModel(modele);
//    }
    
    public void AfficherTable (javax.swing.JTable JTable , ResultSet Res)
    {
        MonModele modele = new MonModele(Res);
        JTable.setModel(modele);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        TReservation = new javax.swing.JTable();
        txtReservation = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCin = new javax.swing.JTextField();
        btnRechercher = new javax.swing.JButton();
        txtPrixReservation = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TReservationSelectionner = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TService = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        TServiceSelectionner = new javax.swing.JTable();
        txtService = new javax.swing.JLabel();
        txtPrixService = new javax.swing.JLabel();
        txt = new javax.swing.JLabel();
        txtPrixTotale = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnPayment = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        boxReservation = new javax.swing.JCheckBox();
        boxService = new javax.swing.JCheckBox();

        setPreferredSize(new java.awt.Dimension(857, 638));

        TReservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TReservation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TReservationMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TReservation);

        txtReservation.setForeground(new java.awt.Color(0, 102, 102));
        txtReservation.setText("Prix des réservations : ");

        jLabel2.setText("Cin");

        txtCin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCinActionPerformed(evt);
            }
        });

        btnRechercher.setText("Rechercher");
        btnRechercher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRechercherMouseClicked(evt);
            }
        });

        TReservationSelectionner.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TReservationSelectionner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TReservationSelectionnerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TReservationSelectionner);

        jLabel3.setText("Réservations sélectionnées");

        jLabel4.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 51));
        jLabel4.setText("Valider le Payment / Telecharger la Facture !!");

        TService.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TService.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TServiceMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TService);

        TServiceSelectionner.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TServiceSelectionner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TServiceSelectionnerMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TServiceSelectionner);

        txtService.setForeground(new java.awt.Color(0, 102, 102));
        txtService.setText("prix des Services :");

        txt.setForeground(new java.awt.Color(0, 102, 102));
        txt.setText("PrixTotale : ");

        jLabel1.setText("Services sélectionées");

        btnPayment.setText("Valider");
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 51));
        jLabel5.setText("Les Services Demandés");

        jLabel6.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 51));
        jLabel6.setText("Les Reservations");

        boxReservation.setText("Tout Selectionner");
        boxReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxReservationActionPerformed(evt);
            }
        });

        boxService.setText("Tout Selectionner");
        boxService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxServiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(btnPayment))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrixTotale)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(246, 246, 246)
                                .addComponent(jLabel5))
                            .addComponent(boxReservation))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtReservation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrixReservation)
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCin, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnRechercher)
                        .addContainerGap(548, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boxService))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtService)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPrixService))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(242, 242, 242)
                                        .addComponent(jLabel6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(btnRechercher))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtReservation)
                                    .addComponent(txtPrixReservation)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(boxReservation)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtService)
                            .addComponent(txtPrixService)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(boxService)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt)
                    .addComponent(txtPrixTotale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnPayment))
                .addGap(59, 59, 59))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCinActionPerformed

    private void btnRechercherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRechercherMouseClicked
        // TODO add your handling code here:
        this.cin = txtCin.getText();
        ResultSet Res = Gr.Reservation_Client(cin);
        AfficherTable(TReservation, Res);
        Res = Gd.ServicesClientActuel(cin);
        AfficherTable(TService,Res);
//        ResultSet Res = Gr.Prix_Totale(cin);
//        try {
//        Res.first();
//            txtPrix.setText(Res.getFloat(1)+" Dh");
//        } catch (SQLException ex) {
//            Logger.getLogger(JPFacture.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnRechercherMouseClicked

    private void TReservationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TReservationMouseClicked
        // TODO add your handling code here:
        int i=0;
        int lig = TReservation.getSelectedRow();
        for( ; i<ligneR && !(TReservation.getValueAt(lig, 0).toString().equalsIgnoreCase(TReservationSelectionner.getValueAt(i, 0).toString())) ; i++);
        if(i>=ligneR)
        {
          idReservation.add(TReservation.getValueAt(lig, 0).toString());
          TReservationSelectionner.setModel(new MonMondelePanier(idReservation,titreR));
          ligneR++;
        }
        
////        boolean Notexist=true;
////        for( ; i<ligne ; i++)
////        {
////             if( TReservation.getValueAt(lig, 0).toString().equalsIgnoreCase(TablePanier.getValueAt(i, 0).toString()) )
////                {
////                    Notexist=false;
////                }
////        }
//        if(Notexist)
//        {
//          idrPanier.add(Integer.parseInt(TReservation.getValueAt(lig, 0).toString()));
//          TablePanier.setModel(new MonMondelePanier(idrPanier));
//          ligne++;
//        }
        
        prixR =0 ;
        for (int j=0 ; j<ligneR ; j++)
        {
            ResultSet Res = Gr.Prix_Reservation(Integer.parseInt(TReservationSelectionner.getValueAt(j,0).toString()));
            try {
                Res.first();
                prixR+= Res.getFloat(1);  
            } catch (SQLException ex) {
                Logger.getLogger(JPFacture.class.getName()).log(Level.SEVERE, null, ex);
            }   
        }
        txtPrixReservation.setText(prixR+" Dh");
        //txtReservation.setText("Prix des réservations :");
        btnPayment.setEnabled(true);
        //txt.setText("Prix totale a payer : ");
        prixTotale = prixS + prixR;
        txtPrixTotale.setText(prixTotale+" DH");
    }//GEN-LAST:event_TReservationMouseClicked

    private void TReservationSelectionnerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TReservationSelectionnerMouseClicked
        // TODO add your handling code here:
        int lig = TReservationSelectionner.getSelectedRow();
        idReservation.remove(lig);
        TReservationSelectionner.setModel(new MonMondelePanier(idReservation,titreR));
        ligneR--;
        prixR = 0 ;
        for (int j=0 ; j<ligneR ; j++)
        {
            ResultSet Res = Gr.Prix_Reservation(Integer.parseInt(TReservationSelectionner.getValueAt(j,0).toString()));
            try {
                Res.first();
                prixR+= Res.getFloat(1);  
            } catch (SQLException ex) {
                Logger.getLogger(JPFacture.class.getName()).log(Level.SEVERE, null, ex);
            }   
        }
        txtPrixReservation.setText(prixR+" Dh");
        prixTotale = prixS + prixR;
        txtPrixTotale.setText(prixTotale+" DH");
        
        if (ligneR==0)
        {
            if(ligneS==0)
            {
                btnPayment.setEnabled(false);
                txtPrixTotale.setText("");
                boxReservation.setText("Tout Selectionner");
                boxReservation.setSelected(false);
            }
            txtPrixReservation.setText("");
            
        }
    }//GEN-LAST:event_TReservationSelectionnerMouseClicked

    private void TServiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TServiceMouseClicked
        // TODO add your handling code here:
        int i=0;
        int lig = TService.getSelectedRow();
        for( ; i<ligneS && !(TService.getValueAt(lig, 0).toString().equalsIgnoreCase(TServiceSelectionner.getValueAt(i, 0).toString())) ; i++);
        if(i>=ligneS)
        {
          idService.add(TService.getValueAt(lig, 0).toString());
          TServiceSelectionner.setModel(new MonMondelePanier(idService,TitreS));
          ligneS++;
        }
        
        prixS =0;
        for (int j=0 ; j<ligneS ; j++)
        {
            
            try {
               ResultSet temp = Gd.get_ids(Integer.parseInt(TServiceSelectionner.getValueAt(j,0).toString()));
               temp.first();
               ResultSet Res = Gs.Prix_Service(temp.getInt(1));
                Res.first();
                prixS+= Res.getFloat(1);  
            } catch (SQLException ex) {
                Logger.getLogger(JPFacture.class.getName()).log(Level.SEVERE, null, ex);
            }   
        }
        txtPrixService.setText(prixS+" Dh");
        //txtService.setText("Prix des Services :");
        //txt.setText("Prix totale a payer : ");
        prixTotale = prixS + prixR;
        txtPrixTotale.setText(prixTotale+" DH");
        btnPayment.setEnabled(true);
    }//GEN-LAST:event_TServiceMouseClicked

    private void TServiceSelectionnerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TServiceSelectionnerMouseClicked
        // TODO add your handling code here:
        int lig = TServiceSelectionner.getSelectedRow();
        idService.remove(lig);
        TServiceSelectionner.setModel(new MonMondelePanier(idService,TitreS));
        ligneS--;
        prixS =0;
        for (int j=0 ; j<ligneS ; j++)
        {
            try {
                ResultSet temp = Gd.get_ids(Integer.parseInt(TServiceSelectionner.getValueAt(j,0).toString()));
                temp.first();
                ResultSet Res = Gs.Prix_Service(temp.getInt(1));
                Res.first();
                prixS+= Res.getFloat(1);  
            } catch (SQLException ex) {
                Logger.getLogger(JPFacture.class.getName()).log(Level.SEVERE, null, ex);
            }   
        }
        txtPrixService.setText(prixS+" Dh");
        prixTotale = prixS + prixR;
        txtPrixTotale.setText(prixTotale+" DH");
        
        if (ligneS==0)
        {
            if(ligneR==0)
            {
                btnPayment.setEnabled(false);
                txtPrixTotale.setText("");
                boxService.setText("Tout Selectionner");
                boxService.setSelected(false);
            }
            txtPrixService.setText("");
        }
    }//GEN-LAST:event_TServiceSelectionnerMouseClicked

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
        // TODO add your handling code here:
        if(ligneR!=0)
        {
        for (int i = 0 ; i<ligneR ; i++)
        {
            Gr.Valider_Payment(Integer.parseInt(TReservationSelectionner.getValueAt(i,0).toString()));
        }
        }
        if(ligneS!=0)
        {
        for (int i = 0 ; i<ligneS ; i++)
        {
            Gd.payer_service(Integer.parseInt(TServiceSelectionner.getValueAt(i,0).toString()));
        } 
        }
        
        pdfGenerator();
        Vider();
        int reponse =JOptionPane.showOptionDialog(null, "Selectionnez un choix pour l'ouvrir !!", "Ouverture!!!", JOptionPane.YES_NO_CANCEL_OPTION , JOptionPane.PLAIN_MESSAGE,null,options1,null);
        if(reponse==JOptionPane.YES_OPTION)
        {
            try {
                Desktop.getDesktop().open((new File("C:\\Users\\omar\\Desktop\\Java Projet 20\\Gestion_Hotel_2019\\Facture")));
            } catch (IOException ex) {
                Logger.getLogger(JPRecu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(reponse==JOptionPane.NO_OPTION)
        {
            try {
                Desktop.getDesktop().open((new File("C:\\Users\\omar\\Desktop\\Java Projet 20\\Gestion_Hotel_2019\\Facture\\Facture"+cin+".pdf")));
            } catch (IOException ex) {
                Logger.getLogger(JPRecu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnPaymentActionPerformed

    private void boxReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxReservationActionPerformed
        // TODO add your handling code here:
        if (boxReservation.isSelected())
        {
            idReservation.clear();
            ligneR =0;
            for(int i=0 ; i<TReservation.getRowCount(); i++)
            {
                idReservation.add(TReservation.getValueAt(i, 0).toString());
                ligneR++;
            }
            TReservationSelectionner.setModel(new MonMondelePanier(idReservation,titreR));
            
            prixR =0 ;
            for (int j=0 ; j<ligneR ; j++)
            {
                ResultSet Res = Gr.Prix_Reservation(Integer.parseInt(TReservationSelectionner.getValueAt(j,0).toString()));
                try {
                    Res.first();
                    prixR+= Res.getFloat(1);  
                } catch (SQLException ex) {
                    Logger.getLogger(JPFacture.class.getName()).log(Level.SEVERE, null, ex);
                }   
            }
            txtPrixReservation.setText(prixR+" Dh");
            //txtReservation.setText("Prix des réservations :");
            btnPayment.setEnabled(true);
            //txt.setText("Prix totale a payer : ");
            prixTotale = prixS + prixR;
            txtPrixTotale.setText(prixTotale+" DH");
            boxReservation.setText("Tout desélectionner");
            //ToutSelectionnerReservation=true;
        }
        else
        {
            idReservation.clear();
            ligneR =0;
            TReservationSelectionner.setModel(new MonMondelePanier(idReservation,titreR));
            boxReservation.setText("Tout sélectionner");
            //ToutSelectionnerReservation=false ;
            prixR = 0 ;
            txtPrixReservation.setText("");
            if (ligneS==0)
            {
                btnPayment.setEnabled(false);
                txtPrixTotale.setText("");
            }
            else
            {
            txtPrixReservation.setText("");
            prixTotale = prixS;
            txtPrixTotale.setText(prixTotale + " DH");
            }  
        }
    }//GEN-LAST:event_boxReservationActionPerformed

    private void boxServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxServiceActionPerformed
        // TODO add your handling code here:
         if (boxService.isSelected())
        {
            idService.clear();
            ligneS =0;
            for(int i=0 ; i<TService.getRowCount(); i++)
            {
                idService.add(TService.getValueAt(i, 0).toString());
                ligneS++;
            }
            TServiceSelectionner.setModel(new MonMondelePanier(idService,TitreS));
            
            prixS =0 ;
            for (int j=0 ; j<ligneS ; j++)
            {
                try {
                    ResultSet temp = Gd.get_ids(Integer.parseInt(TServiceSelectionner.getValueAt(j,0).toString()));
                    temp.first();
                    ResultSet Res = Gs.Prix_Service(temp.getInt(1));
                    Res.first();
                    prixS+= Res.getFloat(1);  
                } catch (SQLException ex) {
                    Logger.getLogger(JPFacture.class.getName()).log(Level.SEVERE, null, ex);
                }   
            }
            txtPrixService.setText(prixS+" Dh");
            btnPayment.setEnabled(true);
            prixTotale = prixS + prixR;
            txtPrixTotale.setText(prixTotale+" DH");
            boxService.setText("Tout desélectionner");
        }
        else
        {
            idService.clear();
            ligneS=0;
            TServiceSelectionner.setModel(new MonMondelePanier(idService,TitreS));
            boxService.setText("Tout sélectionner");
            prixS = 0 ;
            txtPrixService.setText("");
            if (ligneR==0)
            {
                btnPayment.setEnabled(false);
                txtPrixTotale.setText("");
            }
            else
            {
            txtPrixService.setText("");
            prixTotale = prixR;
            txtPrixTotale.setText(prixTotale + " DH");
            }
            
        }
    }//GEN-LAST:event_boxServiceActionPerformed
    
    
    private void pdfGenerator ()
    {
        try {   
                ResultSet Res ;
                Res = Gc.RechercherCLient(cin);
                Res.next();
                String nom = Res.getString("nom");
                String prenom = Res.getString("prenom");
                Calendar cal=Calendar.getInstance();
                int month = cal.get(Calendar.MONTH);
                int year = cal.get(Calendar.YEAR);
                int day = cal.get(Calendar.DAY_OF_MONTH);
                month++ ;
                String annee = ""+year;
                String jour = ""+day ;
                String mois = ""+month;
                
                
                Document document = new Document() ;
                try {
                    PdfWriter.getInstance(document, new FileOutputStream("C:\\Users\\omar\\Desktop\\Java Projet 20\\Gestion_Hotel_2019\\Facture\\Facture"+cin+".pdf"));
                    
                    
                    document.open();
                    Image image = Image.getInstance("logo1.png");
                    document.add(image);
                    Paragraph p = new Paragraph("Facture                                                "+jour+"/"+mois+"/"+annee,FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD,BaseColor.LIGHT_GRAY));
                    document.add(p);
                    document.add(new Paragraph("***************************************************************************************************"));
                    document.add(new Paragraph("\n"));
                    document.add(new Paragraph("\n"));
                    
                    
                    PdfPTable table = new PdfPTable(2);
                    PdfPCell cell = new PdfPCell(new Paragraph("Information Personnelle",FontFactory.getFont(FontFactory.TIMES_BOLD,15,Font.BOLD,BaseColor.WHITE)));
                    cell.setColspan(4);
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(cell);
                    table.addCell("Cin");
                    table.addCell(cin);
                    table.addCell("Nom");
                    table.addCell(nom);
                    table.addCell("Prenom");
                    table.addCell(prenom);
                    document.add(table);
                    
                    
                    document.add(new Paragraph("\n"));
                    document.add(new Paragraph("\n"));
//___________________________________________Reservations_________________________________________________________________                   
                    if(ligneR!=0)
                    {
                    p = new Paragraph("Informations Réservations",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD,BaseColor.LIGHT_GRAY));
                    document.add(p);
                    document.add(new Paragraph("\n"));
                    
                    table = new PdfPTable(5);
                    cell = new PdfPCell(new Paragraph("ID_Reservation",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD,BaseColor.WHITE)));
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(cell);
                    cell = new PdfPCell(new Paragraph("Numero Chambre",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD,BaseColor.WHITE)));
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(cell);
                    cell = new PdfPCell(new Paragraph("Date Debut",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD,BaseColor.WHITE)));
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(cell);
                    cell = new PdfPCell(new Paragraph("Date Fin",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD,BaseColor.WHITE)));
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(cell);
                    cell = new PdfPCell(new Paragraph("Prix en DH",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD,BaseColor.WHITE)));
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(cell);
                    for (int i=0 ; i<ligneR ; i++)
                    {
                        Res = Gr.getInformationReservation(Integer.parseInt(TReservationSelectionner.getValueAt(i,0).toString()));
                        Res.first();
                        String numeroch =""+Res.getInt(1);
                        String Prix = Res.getFloat(4)+"";
                        table.addCell(TReservationSelectionner.getValueAt(i,0).toString());
                        table.addCell(numeroch);
                        table.addCell(Res.getDate(2).toString());
                        table.addCell(Res.getDate(3).toString());
                        table.addCell(Prix);
                     }
                    document.add(table);
                    
                    document.add(new Paragraph("\n"));
                    
                    document.add(new Paragraph("Prix des réservations : "+ prixR + " DH"));
                    }
                    
                    document.add(new Paragraph("\n"));
                    document.add(new Paragraph("\n"));
 //___________________________________Services ___________________________________________________________________                   
                    
                    if(ligneS!=0)
                    {
                    p = new Paragraph("Informations Services",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD,BaseColor.LIGHT_GRAY));
                    document.add(p);
                    document.add(new Paragraph("\n"));
                    
                    table = new PdfPTable(4);
                    cell = new PdfPCell(new Paragraph("ID Demande",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD,BaseColor.WHITE)));
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(cell);
                    cell = new PdfPCell(new Paragraph("Désignation",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD,BaseColor.WHITE)));
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(cell);
                    cell = new PdfPCell(new Paragraph("Date",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD,BaseColor.WHITE)));
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(cell);
                    cell = new PdfPCell(new Paragraph("Prix en DH",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD,BaseColor.WHITE)));
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(cell);
                    for (int i=0 ; i<ligneS ; i++)
                    {
                        ResultSet temp = Gd.get_ids(Integer.parseInt(TServiceSelectionner.getValueAt(i,0).toString()));
                        temp.first();
                        Res = Gd.Information_Service(temp.getInt(1),cin);
                        Res.first();
                        String prix = Res.getFloat(4)+"";
                        table.addCell(TServiceSelectionner.getValueAt(i,0).toString());
                        table.addCell(Res.getString(2));
                        table.addCell(Res.getDate(3).toString());
                        table.addCell(prix);
                     }
                    document.add(table);
                    
                    document.add(new Paragraph("\n"));
                    
                    document.add(new Paragraph("Prix des réservations : "+ prixS + " DH"));
                    }
                    
                    document.add(new Paragraph("\n"));
                    document.add(new Paragraph("\n"));
                    
                    p = new Paragraph("Totale a payer : "+prixTotale+" DH",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD,BaseColor.DARK_GRAY));
                    document.add(p);
                    document.close();
                    
                    
                } catch (DocumentException ex) {
                    Logger.getLogger(JPRecu.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(JPRecu.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (SQLException ex) {
                Logger.getLogger(JPRecu.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

//___________________ Pour Supprimer les Input apres avoir quitter le Panel !!!!!________________________________
    
    public void ViderTable (javax.swing.JTable Jtable)
    {
        MonModele model = new MonModele();
        Jtable.setModel(model);
    }
    
    public void ViderPanier (javax.swing.JTable Jtable)
    {
        MonMondelePanier model = new MonMondelePanier();
        Jtable.setModel(model);
    }
    
    public void Vider()
    {
        //txt.setText("");
        //txtService.setText("");
        txtPrixTotale.setText("");
        txtCin.setText("");
        txtPrixReservation.setText("");
        txtPrixService.setText("");
        ViderTable(TReservation);
        ViderTable(TService);
        ViderPanier(TReservationSelectionner);
        ViderPanier(TServiceSelectionner);
        ligneR = 0 ;
        ligneS = 0;
        btnPayment.setEnabled(false);
        idReservation.clear();
        idService.clear();
        boxService.setSelected(false);
        boxReservation.setSelected(false);
    }
    public javax.swing.JTextField gettxtCin ()
    {
        return txtCin ;
    }
//
//    public javax.swing.JLabel gettxtPrix()
//    {
//        return txtPrix ;
//    }
//    
    
//____________________________________________________________________________________________________________________________
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TReservation;
    private javax.swing.JTable TReservationSelectionner;
    private javax.swing.JTable TService;
    private javax.swing.JTable TServiceSelectionner;
    private javax.swing.JCheckBox boxReservation;
    private javax.swing.JCheckBox boxService;
    private javax.swing.JButton btnPayment;
    private javax.swing.JButton btnRechercher;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel txt;
    private javax.swing.JTextField txtCin;
    private javax.swing.JLabel txtPrixReservation;
    private javax.swing.JLabel txtPrixService;
    private javax.swing.JLabel txtPrixTotale;
    private javax.swing.JLabel txtReservation;
    private javax.swing.JLabel txtService;
    // End of variables declaration//GEN-END:variables
}
