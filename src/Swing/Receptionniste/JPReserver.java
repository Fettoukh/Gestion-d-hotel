/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Swing.Receptionniste;

import Metiers.GestionChambres;
import Metiers.GestionClients;
import Metiers.GestionReservation;
import TableModele.MonModele;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Month;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
/**
 *
 * @author amine
 */
public class JPReserver extends javax.swing.JPanel {

    IHMReceptionniste Jp;
    JPRecu JPr ;
    GestionReservation Gr = new GestionReservation();
    GestionClients Gcl = new GestionClients();
    GestionChambres Gc = new GestionChambres();
    /**
     * Creates new form JPReserver
     */
    public JPReserver() {
        initComponents();
    }
    
    public JPReserver(IHMReceptionniste Jp) {
        initComponents();
        this.Jp=Jp;
        afficher_Reservation();
        remplir_classe();
        remplir_places();
        Filtrer();
        resetInfo();
    }
      
    public void Filtrer()
    {
        txtRechercher.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                warn();
            }

            public void removeUpdate(DocumentEvent e) {
                warn();
            }

            public void insertUpdate(DocumentEvent e) {
                warn();
            }

            public void warn() {
                
                if(txtRechercher.getText()== null){
                   afficher_Reservation();
                }
                else{   
                    ResultSet res = Gr.Filtrer(txtRechercher.getText());
                    TReservation.setModel(new MonModele(res));
                     
                }
            }
        });
    }
                
    public void remplir_classe()
    {
        Vector<String> classes=Gc.getclasseChambre();
        DefaultComboBoxModel df  = new DefaultComboBoxModel(classes);
        this.BoxClasse.setModel(df);
    }    
    
    public void remplir_places()
    {
        Vector<String> classes=Gc.getplacesChambre();
        DefaultComboBoxModel df  = new DefaultComboBoxModel(classes);
        this.boxNbrPlace.setModel(df);             
    }

    public void afficher_Reservation()
    {
        TReservation.setModel(new MonModele(Gr.getReservation()));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boxNbrPlace = new javax.swing.JComboBox<>();
        DateD = new com.toedter.calendar.JDateChooser();
        DateF = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tchambre = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCin = new javax.swing.JTextField();
        BoxClasse = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtChambre = new javax.swing.JTextField();
        Rechercher = new javax.swing.JButton();
        btnReserver = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        labelEreur = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        TReservation = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtRechercher = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtInfo = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(857, 638));

        DateD.setMaxSelectableDate(new java.util.Date(253370768472000L));
        DateD.setMinSelectableDate(new java.util.Date(-62135765928000L));

        Tchambre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Tchambre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TchambreMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tchambre);

        jLabel1.setText("CIN");

        jLabel2.setText("Classe");

        jLabel3.setText("Nombre de Place");

        jLabel4.setText("Date Debut");

        jLabel5.setText("Date Fin");

        jLabel7.setText("Numero chambre");

        txtChambre.setEnabled(false);

        Rechercher.setText("Rechercher");
        Rechercher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RechercherMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RechercherMouseExited(evt);
            }
        });
        Rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RechercherActionPerformed(evt);
            }
        });

        btnReserver.setText("Reserver");
        btnReserver.setEnabled(false);
        btnReserver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnReserverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnReserverMouseExited(evt);
            }
        });
        btnReserver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReserverActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel6.setText("Chambre Disponible :");

        labelEreur.setFont(new java.awt.Font("Serif", 3, 14)); // NOI18N
        labelEreur.setForeground(new java.awt.Color(255, 0, 0));
        labelEreur.setText("Erreur");

        TReservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TReservation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TReservationMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TReservation);

        jLabel8.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Ajouter une nouvelle réservation");

        jLabel9.setFont(new java.awt.Font("Serif", 3, 14)); // NOI18N
        jLabel9.setText("Les Réservations :");

        jLabel10.setText("Double Click pour annuler une réservation !!");

        txtRechercher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtRechercherMouseClicked(evt);
            }
        });
        txtRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRechercherActionPerformed(evt);
            }
        });

        jLabel11.setText("Cin");

        txtInfo.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        txtInfo.setText("Change en cas de click");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/active-search-2-64x64 (2).png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Rechercher)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(71, 71, 71))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnReserver, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCin)
                                .addComponent(BoxClasse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DateD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DateF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(boxNbrPlace, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtChambre, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(labelEreur))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(198, 198, 198))
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInfo))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(79, 79, 79))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(9, 9, 9)
                .addComponent(txtInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(166, 166, 166)
                                .addComponent(DateD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DateF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(188, 188, 188)
                                    .addComponent(jLabel5))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(94, 94, 94)
                                    .addComponent(jLabel3)
                                    .addGap(31, 31, 31)
                                    .addComponent(jLabel4))))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtChambre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(Rechercher))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelEreur)
                                    .addComponent(btnReserver, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BoxClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(21, 21, 21)
                                .addComponent(boxNbrPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TchambreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TchambreMouseClicked
        // TODO add your handling code here:
      int lig = Tchambre.getSelectedRow();
      txtChambre.setText(Tchambre.getValueAt(lig, 0).toString());
      btnReserver.setEnabled(true);     
    }//GEN-LAST:event_TchambreMouseClicked

    private void RechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RechercherActionPerformed
        // TODO add your handling code here:
        String cin =txtCin.getText();
        if(cin.length()>11)
         {
             JOptionPane.showMessageDialog(null, " CIN est invalide !!");
             txtCin.setText("");
             
               return; 
             
         }
       // java.util.Date date = new java.sql.Date(Calendar.getInstance().getTime().getTime());
//        Calendar cal=Calendar.getInstance();
//        cal.setTime(new java.sql.Date(Calendar.getInstance().getTime().getTime()));
        int classe = Integer.parseInt(BoxClasse.getSelectedItem().toString());
        int nbP = Integer.parseInt(boxNbrPlace.getSelectedItem().toString());
        java.sql.Date db= new java.sql.Date(this.DateD.getDate().getTime());
        java.sql.Date df= new java.sql.Date(this.DateF.getDate().getTime());
         Calendar cal1 = Calendar.getInstance();
         
        cal1.add(Calendar.DAY_OF_MONTH, -1);
        //java.util.Date date;
       java.sql.Date date = new java.sql.Date(cal1.getTime().getTime());
       SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
       Date db1 = null;
       Date df1= null;
       try {
            db1=sdf.parse(db.toString());
            df1=sdf.parse(df.toString());
        } catch (ParseException ex) {
            Logger.getLogger(JPReserver.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        if(date.after(db) || db.after(df) ||  db1.equals(df1))
        {
            labelEreur.setText("Attention !! Les Dates Invalide !!");
            Tchambre.setModel(new MonModele());
            DateD.setDate(null);
            DateF.setDate(null);
        }
        else 
        {
            Tchambre.setModel(new MonModele(Gc.getChambre_vide_date(db, df, classe, nbP)));
            labelEreur.setText("");
        }
//        if (db.after(date))
//        {
//            if (db.before(df))
//          {
//            Tchambre.setModel(new MonModele(Gc.getChambre_vide_date(db, df, classe, nbP)));
//            labelEreur.setText("");
//          }
//          else
//          {
//            labelEreur.setText("Attention !! Les Dates Invalide !!");
//            DateD.setDate(null);
//            DateF.setDate(null);
//          }
//            
//        }
//        else
//        {
//          labelEreur.setText("Attention !! Date Debut Invalide !!");
//            DateD.setDate(null);
//            DateF.setDate(null);
//        }

        
        
    }//GEN-LAST:event_RechercherActionPerformed

    private void btnReserverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReserverActionPerformed
        // TODO add your handling code here:
        String cin =txtCin.getText();
        int classe = Integer.parseInt(BoxClasse.getSelectedItem().toString());
        int nbP = Integer.parseInt(boxNbrPlace.getSelectedItem().toString());
        java.util.Date db= DateD.getDate();
        java.util.Date df= DateF.getDate();
        int chambre = Integer.parseInt(txtChambre.getText());
        if (Gcl.Client_existe(cin)==true)
          {
            Gr.Ajouter_reservation(chambre, cin, Jp.cin, db, df);
            Gcl.Activer_Compte_Client(cin);
            ResultSet Res = Gcl.getInformation_Compte(cin);
              try {
                  Res.next();
                  Jp.JPLRecu.login = Res.getString(1);
                  Jp.JPLRecu.password = Res.getString(2);
             }

              catch (SQLException ex) {
                  Logger.getLogger(JPReserver.class.getName()).log(Level.SEVERE, null, ex);
              }
            
            Jp.JPLRecu.cin=cin ;
            Jp.JPLRecu.numch=chambre;
            Jp.JPLRecu.db=db;
            Jp.JPLRecu.df=df;
            
            Jp.JPLRecu.setVisible(true);
            this.setVisible(false); 
        }
        else
        {
            new JFAjouterClient(Jp , cin , db , df , chambre).setVisible(true);
        }
        
    }//GEN-LAST:event_btnReserverActionPerformed

    private void btnReserverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReserverMouseEntered
        // TODO add your handling code here:
//        btnReserver.setBackground(new Color(50,190,196));
          btnReserver.setBackground( Color.GREEN);
    }//GEN-LAST:event_btnReserverMouseEntered

    private void btnReserverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReserverMouseExited
        // TODO add your handling code here:
        btnReserver.setBackground(new Color(187,187,187));
    }//GEN-LAST:event_btnReserverMouseExited

    private void RechercherMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RechercherMouseEntered
        // TODO add your handling code here:
        Rechercher.setBackground(new Color (94,132,191));
    }//GEN-LAST:event_RechercherMouseEntered

    private void RechercherMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RechercherMouseExited
        // TODO add your handling code here:
        Rechercher.setBackground(new Color(187,187,187));
    }//GEN-LAST:event_RechercherMouseExited

    private void TReservationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TReservationMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount()==2)
        {
           int reponse =JOptionPane.showConfirmDialog(null, "Voulez vous vraiment annuler la réservation !!!","annulation", JOptionPane.YES_NO_OPTION);
           if(reponse==JOptionPane.YES_OPTION)
           {
            java.util.Date date = new java.sql.Date(Calendar.getInstance().getTime().getTime());
            int lig = TReservation.getSelectedRow();
            ResultSet Res = Gr.getDb_Df(Integer.parseInt(TReservation.getValueAt(lig,0).toString()));
            try {
                Res.first();
                Date dated = Res.getDate(1);
                Date datef = Res.getDate(2);
                if (dated.compareTo(date) > 0)
                {
                    Gr.delete_Reservation(Integer.parseInt(TReservation.getValueAt(lig,0).toString()));
                    txtInfo.setForeground(Color.GREEN);
                    txtInfo.setText("La reservation de la personne ayant le CIN '"+ TReservation.getValueAt(lig,0).toString()+"' prévue pour " +dated.toString()+" jusqu'a " + datef.toString() + " a été annulée ."  );
                    txtRechercher.setText("");
                    afficher_Reservation();
                }
                else
                {
                    txtInfo.setForeground(Color.RED);
                    txtInfo.setText("impossible d'annuler une réservation en cours .");
                    txtRechercher.setText("");
                    afficher_Reservation();
                }

            } catch (SQLException ex) {
                Logger.getLogger(JPReserver.class.getName()).log(Level.SEVERE, null, ex);
            }
     }
        } 
            
            
            
        
        
    }//GEN-LAST:event_TReservationMouseClicked

    private void txtRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRechercherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRechercherActionPerformed

    private void txtRechercherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRechercherMouseClicked
        // TODO add your handling code here:
        txtInfo.setText("");
    }//GEN-LAST:event_txtRechercherMouseClicked

    
    public void resetInfo()
    {
        java.util.Timer timer = new Timer();
        //Set the schedule function
        timer.scheduleAtFixedRate(new TimerTask() {
                @Override
                public void run() {
                    // Magic here
                          txtInfo.setText("");
                                }
                            },
                0, 20000);
                    }
    //___________________ Pour Supprimer les Input apres avoir quitter le Panel !!!!!________________________________
    
    public void vider ()
    {
        txtCin.setText("");
        BoxClasse.setSelectedIndex(0);
        boxNbrPlace.setSelectedIndex(0);
        DateD.setDate(null);
        DateF.setDate(null);
        txtChambre.setText("");
        MonModele modele = new MonModele();
        Tchambre.setModel(modele); 
        labelEreur.setText("");
        txtRechercher.setText("");
        txtInfo.setText("");
        afficher_Reservation();
        //btnReserver.setEnabled(false);
    }
    
    //_________________________________________________________________________________________________________________

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BoxClasse;
    private com.toedter.calendar.JDateChooser DateD;
    private com.toedter.calendar.JDateChooser DateF;
    private javax.swing.JButton Rechercher;
    private javax.swing.JTable TReservation;
    private javax.swing.JTable Tchambre;
    private javax.swing.JComboBox<String> boxNbrPlace;
    private javax.swing.JButton btnReserver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelEreur;
    private javax.swing.JTextField txtChambre;
    private javax.swing.JTextField txtCin;
    private javax.swing.JLabel txtInfo;
    private javax.swing.JTextField txtRechercher;
    // End of variables declaration//GEN-END:variables
}
